{"ast":null,"code":"var _jsxFileName = \"/Users/jdh/Workgrouper/src/components/rxWorkgroupLabel.js\";\nimport React from \"react\";\nimport { SingleRoundSingleModeWorkgroupLabel, MultipleRoundsSingleModeWorkgroupLabel, MultipleRoundsMultiModeWorkgroupLabel } from \".\";\nimport { areTheseThingsEqual, getOrdinalSymbol } from \"../utils\";\nexport var RxWorkgroupLabel = function RxWorkgroupLabel(_ref) {\n  var workgroup = _ref.workgroup,\n      workoutIndex = _ref.workoutIndex,\n      workgroupIndex = _ref.workgroupIndex;\n  var rounds = workgroup.rounds,\n      note = workgroup.note;\n  var roundsCount = rounds.length;\n  var roundsAreEqual = areTheseThingsEqual(rounds);\n  var ordinalSymbol = getOrdinalSymbol(workgroup.sortOrder);\n  return React.createElement(\"div\", {\n    className: \"mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, note ? React.createElement(\"div\", {\n    className: \"text-sm mt-1 text-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, note) : null, React.createElement(\"div\", {\n    className: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mr-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, ordinalSymbol), roundsCount === 1 ? React.createElement(SingleRoundSingleModeWorkgroupLabel, {\n    key: \"workout\".concat(workoutIndex, \"workgroup\").concat(workgroupIndex),\n    round: rounds[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }) : roundsAreEqual ? React.createElement(MultipleRoundsSingleModeWorkgroupLabel, {\n    key: \"workout\".concat(workoutIndex, \"workgroup\").concat(workgroupIndex),\n    workgroup: workgroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }) : React.createElement(MultipleRoundsMultiModeWorkgroupLabel, {\n    key: \"workout\".concat(workoutIndex, \"workgroup\").concat(workgroupIndex),\n    workgroup: workgroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/jdh/Workgrouper/src/components/rxWorkgroupLabel.js"],"names":["React","SingleRoundSingleModeWorkgroupLabel","MultipleRoundsSingleModeWorkgroupLabel","MultipleRoundsMultiModeWorkgroupLabel","areTheseThingsEqual","getOrdinalSymbol","RxWorkgroupLabel","workgroup","workoutIndex","workgroupIndex","rounds","note","roundsCount","length","roundsAreEqual","ordinalSymbol","sortOrder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mCADF,EAEEC,sCAFF,EAGEC,qCAHF,QAIO,GAJP;AAKA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,UAAtD;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAI1B;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,cACI,QADJA,cACI;AAAA,MACIC,MADJ,GACqBH,SADrB,CACIG,MADJ;AAAA,MACYC,IADZ,GACqBJ,SADrB,CACYI,IADZ;AAEJ,MAAMC,WAAW,GAAGF,MAAM,CAACG,MAA3B;AACA,MAAMC,cAAc,GAAGV,mBAAmB,CAACM,MAAD,CAA1C;AACA,MAAMK,aAAa,GAAGV,gBAAgB,CAACE,SAAS,CAACS,SAAX,CAAtC;AACA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,GAAG;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,IAAzC,CAAH,GAA0D,IADjE,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBI,aAAvB,CADF,EAEGH,WAAW,KAAK,CAAhB,GACC,oBAAC,mCAAD;AACE,IAAA,GAAG,mBAAYJ,YAAZ,sBAAoCC,cAApC,CADL;AAEE,IAAA,KAAK,EAAEC,MAAM,CAAC,CAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAKGI,cAAc,GAChB,oBAAC,sCAAD;AACE,IAAA,GAAG,mBAAYN,YAAZ,sBAAoCC,cAApC,CADL;AAEE,IAAA,SAAS,EAAEF,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAMhB,oBAAC,qCAAD;AACE,IAAA,GAAG,mBAAYC,YAAZ,sBAAoCC,cAApC,CADL;AAEE,IAAA,SAAS,EAAEF,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CAFF,CADF;AAwBD,CAjCM","sourcesContent":["import React from \"react\";\nimport {\n  SingleRoundSingleModeWorkgroupLabel,\n  MultipleRoundsSingleModeWorkgroupLabel,\n  MultipleRoundsMultiModeWorkgroupLabel\n} from \".\";\nimport { areTheseThingsEqual, getOrdinalSymbol } from \"../utils\";\n\nexport const RxWorkgroupLabel = ({\n  workgroup,\n  workoutIndex,\n  workgroupIndex\n}) => {\n  const { rounds, note } = workgroup;\n  const roundsCount = rounds.length;\n  const roundsAreEqual = areTheseThingsEqual(rounds);\n  const ordinalSymbol = getOrdinalSymbol(workgroup.sortOrder);\n  return (\n    <div className=\"mb-2\">\n      {note ? <div className=\"text-sm mt-1 text-wrap\">{note}</div> : null}\n      <div className=\"flex\">\n        <div className=\"mr-1\">{ordinalSymbol}</div>\n        {roundsCount === 1 ? (\n          <SingleRoundSingleModeWorkgroupLabel\n            key={`workout${workoutIndex}workgroup${workgroupIndex}`}\n            round={rounds[0]}\n          />\n        ) : roundsAreEqual ? (\n          <MultipleRoundsSingleModeWorkgroupLabel\n            key={`workout${workoutIndex}workgroup${workgroupIndex}`}\n            workgroup={workgroup}\n          />\n        ) : (\n          <MultipleRoundsMultiModeWorkgroupLabel\n            key={`workout${workoutIndex}workgroup${workgroupIndex}`}\n            workgroup={workgroup}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
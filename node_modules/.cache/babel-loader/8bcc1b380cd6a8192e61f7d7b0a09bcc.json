{"ast":null,"code":"var _jsxFileName = \"/Users/jdh/Workgrouper/src/components/rxWorkgroupLabel.js\";\nimport React from \"react\";\nimport { SingleRoundSingleModeWorkgroupLabel, MultipleRoundsSingleModeWorkgroupLabel, MultipleRoundsMultiModeWorkgroupLabel } from \".\";\nexport var RxWorkgroupLabel = function RxWorkgroupLabel(_ref) {\n  var workgroup = _ref.workgroup;\n  var rounds = workgroup.rounds,\n      note = workgroup.note;\n  var roundsCount = rounds.length;\n  var roundsAreEqual = areTheseThingsEqual(rounds);\n  var ordinalSymbol = getOrdinalSymbol(workgroup.sortOrder);\n  return React.createElement(\"div\", {\n    className: \"mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, note ? React.createElement(\"div\", {\n    className: \"text-sm mt-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, note) : null, React.createElement(\"div\", {\n    className: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mr-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, ordinalSymbol), roundsCount === 1 ? React.createElement(SingleRoundSingleModeWorkgroupLabel, {\n    round: rounds[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }) : roundsAreEqual ? React.createElement(MultipleRoundsSingleModeWorkgroupLabel, {\n    workgroup: workgroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }) : React.createElement(MultipleRoundsMultiModeWorkgroupLabel, {\n    workgroup: workgroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/jdh/Workgrouper/src/components/rxWorkgroupLabel.js"],"names":["React","SingleRoundSingleModeWorkgroupLabel","MultipleRoundsSingleModeWorkgroupLabel","MultipleRoundsMultiModeWorkgroupLabel","RxWorkgroupLabel","workgroup","rounds","note","roundsCount","length","roundsAreEqual","areTheseThingsEqual","ordinalSymbol","getOrdinalSymbol","sortOrder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mCADF,EAEEC,sCAFF,EAGEC,qCAHF,QAIO,GAJP;AAMA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAAA,MACzCC,MADyC,GACxBD,SADwB,CACzCC,MADyC;AAAA,MACjCC,IADiC,GACxBF,SADwB,CACjCE,IADiC;AAEjD,MAAMC,WAAW,GAAGF,MAAM,CAACG,MAA3B;AACA,MAAMC,cAAc,GAAGC,mBAAmB,CAACL,MAAD,CAA1C;AACA,MAAMM,aAAa,GAAGC,gBAAgB,CAACR,SAAS,CAACS,SAAX,CAAtC;AACA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,GAAG;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,IAA/B,CAAH,GAAgD,IADvD,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBK,aAAvB,CADF,EAEGJ,WAAW,KAAK,CAAhB,GACC,oBAAC,mCAAD;AAAqC,IAAA,KAAK,EAAEF,MAAM,CAAC,CAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEGI,cAAc,GAChB,oBAAC,sCAAD;AAAwC,IAAA,SAAS,EAAEL,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAGhB,oBAAC,qCAAD;AAAuC,IAAA,SAAS,EAAEA,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAFF,CADF;AAeD,CApBM","sourcesContent":["import React from \"react\";\nimport {\n  SingleRoundSingleModeWorkgroupLabel,\n  MultipleRoundsSingleModeWorkgroupLabel,\n  MultipleRoundsMultiModeWorkgroupLabel\n} from \".\";\n\nexport const RxWorkgroupLabel = ({ workgroup }) => {\n  const { rounds, note } = workgroup;\n  const roundsCount = rounds.length;\n  const roundsAreEqual = areTheseThingsEqual(rounds);\n  const ordinalSymbol = getOrdinalSymbol(workgroup.sortOrder);\n  return (\n    <div className=\"mb-2\">\n      {note ? <div className=\"text-sm mt-1\">{note}</div> : null}\n      <div className=\"flex\">\n        <div className=\"mr-1\">{ordinalSymbol}</div>\n        {roundsCount === 1 ? (\n          <SingleRoundSingleModeWorkgroupLabel round={rounds[0]} />\n        ) : roundsAreEqual ? (\n          <MultipleRoundsSingleModeWorkgroupLabel workgroup={workgroup} />\n        ) : (\n          <MultipleRoundsMultiModeWorkgroupLabel workgroup={workgroup} />\n        )}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
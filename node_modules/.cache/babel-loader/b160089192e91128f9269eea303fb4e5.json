{"ast":null,"code":"import _objectSpread from \"/Users/jdh/Workgrouper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/jdh/Workgrouper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jdh/Workgrouper/src/components/workout.js\";\nimport React, { useState } from \"react\";\nimport { FaCheck, FaTimes, FaEdit } from \"react-icons/fa\";\nimport { RxWorkgroupLabel, WorkoutResultForm } from \".\";\nimport { groupObjectsByProperty, getIntervalSymbol } from \"../utils\";\n\nvar ConfirmCancelButtons = function ConfirmCancelButtons(_ref) {\n  var confirm = _ref.confirm,\n      cancel = _ref.cancel;\n  return React.createElement(\"div\", {\n    className: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return confirm();\n    },\n    className: \"bg-green-500 hover:bg-green-700 text-white font-bold px-2 py-1 rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(FaCheck, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return cancel();\n    },\n    className: \"bg-red-500 hover:bg-red-700 text-white font-bold px-2 py-1 rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(FaTimes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })));\n};\n\nvar ConfirmEditButtons = function ConfirmEditButtons(_ref2) {\n  var confirm = _ref2.confirm,\n      edit = _ref2.edit;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return edit();\n    },\n    className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold px-2 py-1 rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(FaEdit, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return confirm();\n    },\n    className: \"bg-green-500 hover:bg-green-700 text-white font-bold px-2 py-1 rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(FaCheck, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n};\n\nvar camel2title = function camel2title(camelCaseString) {\n  return camelCaseString.replace(/([A-Z])/g, function (match) {\n    return \" \".concat(match);\n  }).replace(/^./, function (match) {\n    return match.toUpperCase();\n  });\n};\n\nvar toCamelCase = function toCamelCase(string) {\n  return string.toLowerCase().trim().split(/[.\\-_\\s]/g).reduce(function (string, word) {\n    return string + word[0].toUpperCase() + word.slice(1);\n  });\n};\n\nvar WorkoutLabel = function WorkoutLabel(_ref3) {\n  var workout = _ref3.workout,\n      workoutIndex = _ref3.workoutIndex;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, workout.workgroups.map(function (workgroup, workgroupIndex) {\n    return React.createElement(RxWorkgroupLabel, {\n      key: \"workgroupLabel\" + workgroupIndex,\n      workgroup: workgroup,\n      workgroupIndex: workgroupIndex,\n      workoutIndex: workoutIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    });\n  }));\n};\n\nexport var Workout = function Workout(_ref4) {\n  var workout = _ref4.workout,\n      workoutIndex = _ref4.workoutIndex;\n  var name = workout.name,\n      description = workout.description;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      workoutIsVisible = _useState2[0],\n      setWorkoutIsVisible = _useState2[1];\n\n  var toggleWorkoutVisibility = function toggleWorkoutVisibility() {\n    setWorkoutIsVisible(!workoutIsVisible);\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      resultIsVisible = _useState4[0],\n      setResultIsVisible = _useState4[1];\n\n  var showResult = function showResult() {\n    setResultIsVisible(true);\n  };\n\n  var hideResult = function hideResult() {\n    setResultIsVisible(false);\n  };\n\n  var workoutWorksets = [];\n  workout.workgroups.forEach(function (workgroup) {\n    return workgroup.rounds.forEach(function (round) {\n      return round.worksets.forEach(function (workset) {\n        return workoutWorksets.push(_objectSpread({}, workset, {\n          exerciseName: toCamelCase(workset.exercise.name),\n          intensityUnit: workset.exercise.intensityUnit\n        }));\n      });\n    });\n  });\n  var worksetsByExercise = groupObjectsByProperty(workoutWorksets, \"exerciseName\");\n  var workoutExerciseNames = workoutWorksets.map(function (ww) {\n    return ww.exerciseName;\n  }).filter(function (v, i, a) {\n    return a.indexOf(v) === i;\n  });\n  var exerciseVolumes = workoutExerciseNames.map(function (exerciseName) {\n    return {\n      exerciseName: camel2title(exerciseName),\n      volume: worksetsByExercise[exerciseName].reduce(function (acc, workset) {\n        return acc + (workset.intensity || 0);\n      }, 0)\n    };\n  });\n  return React.createElement(\"div\", {\n    className: \"m-3 p-3 bg-gray-400 rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: toggleWorkoutVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, name), React.createElement(\"div\", {\n    className: \"text-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, description)), workoutIsVisible ? resultIsVisible ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(ConfirmCancelButtons, {\n    confirm: hideResult,\n    cancel: hideResult,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(WorkoutResultForm, {\n    workout: workout,\n    workoutIndex: workoutIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(ConfirmCancelButtons, {\n    confirm: hideResult,\n    cancel: hideResult,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(WorkoutLabel, {\n    workout: workout,\n    workoutIndex: workoutIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(ConfirmEditButtons, {\n    confirm: function confirm() {\n      return alert(\"Submitted!\");\n    },\n    edit: showResult,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, exerciseVolumes.map(function (ev) {\n    return React.createElement(\"div\", {\n      className: \"text-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, ev.exerciseName, \": \", ev.volume, worksetsByExercise[toCamelCase(ev.intensityUnit)], \"/\", worksetsByExercise[toCamelCase(ev.exerciseName)].length, \" worksets\");\n  })));\n};","map":{"version":3,"sources":["/Users/jdh/Workgrouper/src/components/workout.js"],"names":["React","useState","FaCheck","FaTimes","FaEdit","RxWorkgroupLabel","WorkoutResultForm","groupObjectsByProperty","getIntervalSymbol","ConfirmCancelButtons","confirm","cancel","ConfirmEditButtons","edit","camel2title","camelCaseString","replace","match","toUpperCase","toCamelCase","string","toLowerCase","trim","split","reduce","word","slice","WorkoutLabel","workout","workoutIndex","workgroups","map","workgroup","workgroupIndex","Workout","name","description","workoutIsVisible","setWorkoutIsVisible","toggleWorkoutVisibility","resultIsVisible","setResultIsVisible","showResult","hideResult","workoutWorksets","forEach","rounds","round","worksets","workset","push","exerciseName","exercise","intensityUnit","worksetsByExercise","workoutExerciseNames","ww","filter","v","i","a","indexOf","exerciseVolumes","volume","acc","intensity","alert","ev","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,QAAyC,gBAAzC;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,GAApD;AACA,SAASC,sBAAT,EAAiCC,iBAAjC,QAA0D,UAA1D;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAyB;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACpD,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE;AAAA,aAAMD,OAAO,EAAb;AAAA,KADX;AAEE,IAAA,SAAS,EAAC,wEAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAOE;AACE,IAAA,OAAO,EAAE;AAAA,aAAMC,MAAM,EAAZ;AAAA,KADX;AAEE,IAAA,SAAS,EAAC,oEAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAPF,CADF;AAgBD,CAjBD;;AAmBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,QAAuB;AAAA,MAApBF,OAAoB,SAApBA,OAAoB;AAAA,MAAXG,IAAW,SAAXA,IAAW;AAChD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE;AAAA,aAAMA,IAAI,EAAV;AAAA,KADX;AAEE,IAAA,SAAS,EAAC,sEAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAOE;AACE,IAAA,OAAO,EAAE;AAAA,aAAMH,OAAO,EAAb;AAAA,KADX;AAEE,IAAA,SAAS,EAAC,wEAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAPF,CADF;AAgBD,CAjBD;;AAmBA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAC,eAAe;AAAA,SACjCA,eAAe,CACZC,OADH,CACW,UADX,EACuB,UAAAC,KAAK;AAAA,sBAAQA,KAAR;AAAA,GAD5B,EAEGD,OAFH,CAEW,IAFX,EAEiB,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAN,EAAJ;AAAA,GAFtB,CADiC;AAAA,CAAnC;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,MAAM;AAAA,SACxBA,MAAM,CACHC,WADH,GAEGC,IAFH,GAGGC,KAHH,CAGS,WAHT,EAIGC,MAJH,CAIU,UAACJ,MAAD,EAASK,IAAT;AAAA,WAAkBL,MAAM,GAAGK,IAAI,CAAC,CAAD,CAAJ,CAAQP,WAAR,EAAT,GAAiCO,IAAI,CAACC,KAAL,CAAW,CAAX,CAAnD;AAAA,GAJV,CADwB;AAAA,CAA1B;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGC,OAAH,SAAGA,OAAH;AAAA,MAAYC,YAAZ,SAAYA,YAAZ;AAAA,SACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,UAAR,CAAmBC,GAAnB,CAAuB,UAACC,SAAD,EAAYC,cAAZ;AAAA,WACtB,oBAAC,gBAAD;AACE,MAAA,GAAG,EAAE,mBAAmBA,cAD1B;AAEE,MAAA,SAAS,EAAED,SAFb;AAGE,MAAA,cAAc,EAAEC,cAHlB;AAIE,MAAA,YAAY,EAAEJ,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsB;AAAA,GAAvB,CADH,CADmB;AAAA,CAArB;;AAaA,OAAO,IAAMK,OAAO,GAAG,SAAVA,OAAU,QAA+B;AAAA,MAA5BN,OAA4B,SAA5BA,OAA4B;AAAA,MAAnBC,YAAmB,SAAnBA,YAAmB;AAAA,MAC5CM,IAD4C,GACtBP,OADsB,CAC5CO,IAD4C;AAAA,MACtCC,WADsC,GACtBR,OADsB,CACtCQ,WADsC;;AAAA,kBAEJnC,QAAQ,CAAC,KAAD,CAFJ;AAAA;AAAA,MAE7CoC,gBAF6C;AAAA,MAE3BC,mBAF2B;;AAGpD,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpCD,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACD,GAFD;;AAHoD,mBAMNpC,QAAQ,CAAC,KAAD,CANF;AAAA;AAAA,MAM7CuC,eAN6C;AAAA,MAM5BC,kBAN4B;;AAOpD,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBD,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAGA,MAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBF,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAFD;;AAIA,MAAIG,eAAe,GAAG,EAAtB;AACAhB,EAAAA,OAAO,CAACE,UAAR,CAAmBe,OAAnB,CAA2B,UAAAb,SAAS;AAAA,WAClCA,SAAS,CAACc,MAAV,CAAiBD,OAAjB,CAAyB,UAAAE,KAAK;AAAA,aAC5BA,KAAK,CAACC,QAAN,CAAeH,OAAf,CAAuB,UAAAI,OAAO;AAAA,eAC5BL,eAAe,CAACM,IAAhB,mBACKD,OADL;AAEEE,UAAAA,YAAY,EAAEhC,WAAW,CAAC8B,OAAO,CAACG,QAAR,CAAiBjB,IAAlB,CAF3B;AAGEkB,UAAAA,aAAa,EAAEJ,OAAO,CAACG,QAAR,CAAiBC;AAHlC,WAD4B;AAAA,OAA9B,CAD4B;AAAA,KAA9B,CADkC;AAAA,GAApC;AAWA,MAAMC,kBAAkB,GAAG/C,sBAAsB,CAC/CqC,eAD+C,EAE/C,cAF+C,CAAjD;AAIA,MAAMW,oBAAoB,GAAGX,eAAe,CACzCb,GAD0B,CACtB,UAAAyB,EAAE;AAAA,WAAIA,EAAE,CAACL,YAAP;AAAA,GADoB,EAE1BM,MAF0B,CAEnB,UAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP;AAAA,WAAaA,CAAC,CAACC,OAAF,CAAUH,CAAV,MAAiBC,CAA9B;AAAA,GAFmB,CAA7B;AAGA,MAAMG,eAAe,GAAGP,oBAAoB,CAACxB,GAArB,CAAyB,UAAAoB,YAAY;AAAA,WAAK;AAChEA,MAAAA,YAAY,EAAErC,WAAW,CAACqC,YAAD,CADuC;AAEhEY,MAAAA,MAAM,EAAET,kBAAkB,CAACH,YAAD,CAAlB,CAAiC3B,MAAjC,CACN,UAACwC,GAAD,EAAMf,OAAN;AAAA,eAAkBe,GAAG,IAAIf,OAAO,CAACgB,SAAR,IAAqB,CAAzB,CAArB;AAAA,OADM,EAEN,CAFM;AAFwD,KAAL;AAAA,GAArC,CAAxB;AAQA,SACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,OAAO,EAAE1B,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BJ,IAA1B,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BC,WAA1B,CAFF,CADF,EAKGC,gBAAgB,GACfG,eAAe,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEG,UAA/B;AAA2C,IAAA,MAAM,EAAEA,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEf,OAA5B;AAAqC,IAAA,YAAY,EAAEC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEc,UAA/B;AAA2C,IAAA,MAAM,EAAEA,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADa,GAOb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEf,OAAvB;AAAgC,IAAA,YAAY,EAAEC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,kBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMqC,KAAK,CAAC,YAAD,CAAX;AAAA,KADX;AAEE,IAAA,IAAI,EAAExB,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARa,GAiBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGoB,eAAe,CAAC/B,GAAhB,CAAoB,UAAAoC,EAAE;AAAA,WACrB;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,EAAE,CAAChB,YADN,QACsBgB,EAAE,CAACJ,MADzB,EAEGT,kBAAkB,CAACnC,WAAW,CAACgD,EAAE,CAACd,aAAJ,CAAZ,CAFrB,OAGGC,kBAAkB,CAACnC,WAAW,CAACgD,EAAE,CAAChB,YAAJ,CAAZ,CAAlB,CAAiDiB,MAHpD,cADqB;AAAA,GAAtB,CADH,CAtBJ,CADF;AAmCD,CA5EM","sourcesContent":["import React, { useState } from \"react\";\nimport { FaCheck, FaTimes, FaEdit } from \"react-icons/fa\";\nimport { RxWorkgroupLabel, WorkoutResultForm } from \".\";\nimport { groupObjectsByProperty, getIntervalSymbol } from \"../utils\";\n\nconst ConfirmCancelButtons = ({ confirm, cancel }) => {\n  return (\n    <div className=\"flex\">\n      <button\n        onClick={() => confirm()}\n        className=\"bg-green-500 hover:bg-green-700 text-white font-bold px-2 py-1 rounded\"\n      >\n        <FaCheck />\n      </button>\n      <button\n        onClick={() => cancel()}\n        className=\"bg-red-500 hover:bg-red-700 text-white font-bold px-2 py-1 rounded\"\n      >\n        <FaTimes />\n      </button>\n    </div>\n  );\n};\n\nconst ConfirmEditButtons = ({ confirm, edit }) => {\n  return (\n    <div>\n      <button\n        onClick={() => edit()}\n        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold px-2 py-1 rounded\"\n      >\n        <FaEdit />\n      </button>\n      <button\n        onClick={() => confirm()}\n        className=\"bg-green-500 hover:bg-green-700 text-white font-bold px-2 py-1 rounded\"\n      >\n        <FaCheck />\n      </button>\n    </div>\n  );\n};\n\nconst camel2title = camelCaseString =>\n  camelCaseString\n    .replace(/([A-Z])/g, match => ` ${match}`)\n    .replace(/^./, match => match.toUpperCase());\n\nconst toCamelCase = string =>\n  string\n    .toLowerCase()\n    .trim()\n    .split(/[.\\-_\\s]/g)\n    .reduce((string, word) => string + word[0].toUpperCase() + word.slice(1));\n\nconst WorkoutLabel = ({ workout, workoutIndex }) => (\n  <div>\n    {workout.workgroups.map((workgroup, workgroupIndex) => (\n      <RxWorkgroupLabel\n        key={\"workgroupLabel\" + workgroupIndex}\n        workgroup={workgroup}\n        workgroupIndex={workgroupIndex}\n        workoutIndex={workoutIndex}\n      />\n    ))}\n  </div>\n);\n\nexport const Workout = ({ workout, workoutIndex }) => {\n  const { name, description } = workout;\n  const [workoutIsVisible, setWorkoutIsVisible] = useState(false);\n  const toggleWorkoutVisibility = () => {\n    setWorkoutIsVisible(!workoutIsVisible);\n  };\n  const [resultIsVisible, setResultIsVisible] = useState(false);\n  const showResult = () => {\n    setResultIsVisible(true);\n  };\n  const hideResult = () => {\n    setResultIsVisible(false);\n  };\n\n  let workoutWorksets = [];\n  workout.workgroups.forEach(workgroup =>\n    workgroup.rounds.forEach(round =>\n      round.worksets.forEach(workset =>\n        workoutWorksets.push({\n          ...workset,\n          exerciseName: toCamelCase(workset.exercise.name),\n          intensityUnit: workset.exercise.intensityUnit\n        })\n      )\n    )\n  );\n  const worksetsByExercise = groupObjectsByProperty(\n    workoutWorksets,\n    \"exerciseName\"\n  );\n  const workoutExerciseNames = workoutWorksets\n    .map(ww => ww.exerciseName)\n    .filter((v, i, a) => a.indexOf(v) === i);\n  const exerciseVolumes = workoutExerciseNames.map(exerciseName => ({\n    exerciseName: camel2title(exerciseName),\n    volume: worksetsByExercise[exerciseName].reduce(\n      (acc, workset) => acc + (workset.intensity || 0),\n      0\n    )\n  }));\n\n  return (\n    <div className=\"m-3 p-3 bg-gray-400 rounded\">\n      <div onClick={toggleWorkoutVisibility}>\n        <div className=\"text-lg\">{name}</div>\n        <div className=\"text-sm\">{description}</div>\n      </div>\n      {workoutIsVisible ? (\n        resultIsVisible ? (\n          <div>\n            <ConfirmCancelButtons confirm={hideResult} cancel={hideResult} />\n            <WorkoutResultForm workout={workout} workoutIndex={workoutIndex} />\n            <ConfirmCancelButtons confirm={hideResult} cancel={hideResult} />\n          </div>\n        ) : (\n          <div>\n            <WorkoutLabel workout={workout} workoutIndex={workoutIndex} />\n            <ConfirmEditButtons\n              confirm={() => alert(\"Submitted!\")}\n              edit={showResult}\n            />\n          </div>\n        )\n      ) : (\n        <div>\n          {exerciseVolumes.map(ev => (\n            <div className=\"text-sm\">\n              {ev.exerciseName}: {ev.volume}\n              {worksetsByExercise[toCamelCase(ev.intensityUnit)]}/\n              {worksetsByExercise[toCamelCase(ev.exerciseName)].length} worksets\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
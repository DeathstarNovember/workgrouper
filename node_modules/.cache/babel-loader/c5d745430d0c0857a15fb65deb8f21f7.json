{"ast":null,"code":"var _jsxFileName = \"/Users/jdh/Workgrouper/src/components/workoutResultForm.js\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { RxWorkgroupLabel } from \"./rxWorkgroupLabel\";\n\nvar WorkgroupResultForm = function WorkgroupResultForm(_ref) {\n  var workgroup = _ref.workgroup,\n      workgroupIndex = _ref.workgroupIndex,\n      register = _ref.register;\n  var inputStyle = \"bg-gray-500 shadow appearance-none border rounded p-1 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\";\n  return React.createElement(\"div\", {\n    key: \"workoutWorkgroupFormInputs\".concat(workgroupIndex),\n    className: \"mb-4 bg-gray-500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(RxWorkgroupLabel, {\n    workgroup: workgroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), workgroup.rounds.map(function (round) {\n    return round.worksets.map(function (workset) {\n      var exercise = workset.exercise,\n          reps = workset.reps,\n          intensity = workset.intensity,\n          intensityUnit = workset.intensityUnit,\n          intervalType = workset.intervalType,\n          interval = workset.interval;\n      var intervalSymbol = intervalType === \"inclusive\" ? \" //\" : \" /\";\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, exercise.name), React.createElement(\"div\", {\n        className: \"flex ml-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: inputStyle + \" w-10\",\n        name: \"reps\",\n        defaultValue: reps,\n        type: \"number\",\n        ref: register({\n          required: true,\n          pattern: /\\d+/\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), \" \", \"@\", React.createElement(\"input\", {\n        className: inputStyle + \" w-20\",\n        name: \"intensity\",\n        defaultValue: intensity,\n        type: \"number\",\n        ref: register({\n          required: true,\n          pattern: /\\d+/\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, intensityUnit), React.createElement(\"div\", {\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, intervalSymbol), React.createElement(\"input\", {\n        className: inputStyle + \" w-20\",\n        name: \"interval\",\n        defaultValue: interval,\n        type: \"number\",\n        ref: register({\n          required: true,\n          pattern: /\\d+/\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    });\n  }));\n};\n\nexport var WorkoutResultForm = function WorkoutResultForm(_ref2) {\n  var workout = _ref2.workout,\n      workoutId = _ref2.workoutId;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    key: \"workoutResultForm\".concat(workoutId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, workout.workgroups.map(function (workgroup, workgroupIndex) {\n    return React.createElement(WorkgroupResultForm, {\n      key: \"workgroupResultForm\".concat(workgroupIndex),\n      workgroup: workgroup,\n      workgroupIndex: workgroupIndex,\n      register: register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/jdh/Workgrouper/src/components/workoutResultForm.js"],"names":["React","useForm","RxWorkgroupLabel","WorkgroupResultForm","workgroup","workgroupIndex","register","inputStyle","rounds","map","round","worksets","workset","exercise","reps","intensity","intensityUnit","intervalType","interval","intervalSymbol","name","required","pattern","WorkoutResultForm","workout","workoutId","handleSubmit","onSubmit","data","console","log","workgroups"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { RxWorkgroupLabel } from \"./rxWorkgroupLabel\";\n\nconst WorkgroupResultForm = ({ workgroup, workgroupIndex, register }) => {\n  const inputStyle =\n    \"bg-gray-500 shadow appearance-none border rounded p-1 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\";\n  return (\n    <div\n      key={`workoutWorkgroupFormInputs${workgroupIndex}`}\n      className=\"mb-4 bg-gray-500\"\n    >\n      <RxWorkgroupLabel workgroup={workgroup} />\n      {workgroup.rounds.map(round => {\n        return round.worksets.map(workset => {\n          const {\n            exercise,\n            reps,\n            intensity,\n            intensityUnit,\n            intervalType,\n            interval\n          } = workset;\n          const intervalSymbol = intervalType === \"inclusive\" ? \" //\" : \" /\";\n          return (\n            <div>\n              <div className=\"text-sm\">{exercise.name}</div>\n              <div className=\"flex ml-5\">\n                <input\n                  className={inputStyle + \" w-10\"}\n                  name=\"reps\"\n                  defaultValue={reps}\n                  type=\"number\"\n                  ref={register({ required: true, pattern: /\\d+/ })}\n                />{\" \"}\n                @\n                <input\n                  className={inputStyle + \" w-20\"}\n                  name=\"intensity\"\n                  defaultValue={intensity}\n                  type=\"number\"\n                  ref={register({ required: true, pattern: /\\d+/ })}\n                />\n                <div className=\"mr-2\">{intensityUnit}</div>\n                <div className=\"mr-2\">{intervalSymbol}</div>\n                <input\n                  className={inputStyle + \" w-20\"}\n                  name=\"interval\"\n                  defaultValue={interval}\n                  type=\"number\"\n                  ref={register({ required: true, pattern: /\\d+/ })}\n                />\n              </div>\n            </div>\n          );\n        });\n      })}\n    </div>\n  );\n};\n\nexport const WorkoutResultForm = ({ workout, workoutId }) => {\n  const { register, handleSubmit } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n  };\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div key={`workoutResultForm${workoutId}`}>\n        {workout.workgroups.map((workgroup, workgroupIndex) => (\n          <WorkgroupResultForm\n            key={`workgroupResultForm${workgroupIndex}`}\n            workgroup={workgroup}\n            workgroupIndex={workgroupIndex}\n            register={register}\n          />\n        ))}\n      </div>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
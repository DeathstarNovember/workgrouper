{"ast":null,"code":"import _objectSpread from \"/Users/jdh/Workgrouper/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { ordinals } from \"../data\";\nimport { diff } from \"deep-object-diff\";\nexport var getIntervalSymbol = function getIntervalSymbol(interval, intervalType) {\n  switch (intervalType) {\n    case \"inclusive\":\n      return \" //\".concat(interval);\n\n    case \"exclusive\":\n      return \" /\".concat(interval);\n\n    case \"none\":\n      return \"\";\n\n    default:\n      return \"\".concat(interval);\n  }\n};\nexport var getOrdinalSymbol = function getOrdinalSymbol(sortOrder) {\n  return ordinals[sortOrder] + \".\";\n};\nexport var areTheseThingsEqual = function areTheseThingsEqual(things) {\n  var unorderedThings = things.map(function (thing) {\n    return _objectSpread({}, thing, {\n      sortOrder: 0\n    });\n  });\n  var thingDiffs = unorderedThings.map(function (thing, i, arr) {\n    return diff(arr[0], thing);\n  });\n  var areThingsEqual = thingDiffs.every(function (thingDiff) {\n    return Object.keys(thingDiff).length === 0 && thingDiff.constructor === Object;\n  });\n  return areThingsEqual;\n};","map":{"version":3,"sources":["/Users/jdh/Workgrouper/src/utils/workoutUtils.js"],"names":["ordinals","diff","getIntervalSymbol","interval","intervalType","getOrdinalSymbol","sortOrder","areTheseThingsEqual","things","unorderedThings","map","thing","thingDiffs","i","arr","areThingsEqual","every","thingDiff","Object","keys","length","constructor"],"mappings":";AAAA,SAASA,QAAT,QAAyB,SAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,YAAX,EAA4B;AAC3D,UAAQA,YAAR;AACE,SAAK,WAAL;AACE,0BAAaD,QAAb;;AACF,SAAK,WAAL;AACE,yBAAYA,QAAZ;;AACF,SAAK,MAAL;AACE,aAAO,EAAP;;AACF;AACE,uBAAUA,QAAV;AARJ;AAUD,CAXM;AAaP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,SAAS,EAAI;AAC3C,SAAON,QAAQ,CAACM,SAAD,CAAR,GAAsB,GAA7B;AACD,CAFM;AAIP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,MAAM,EAAI;AAC3C,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAP,CAAW,UAAAC,KAAK;AAAA,6BAAUA,KAAV;AAAiBL,MAAAA,SAAS,EAAE;AAA5B;AAAA,GAAhB,CAAxB;AACA,MAAMM,UAAU,GAAGH,eAAe,CAACC,GAAhB,CAAoB,UAACC,KAAD,EAAQE,CAAR,EAAWC,GAAX;AAAA,WACrCb,IAAI,CAACa,GAAG,CAAC,CAAD,CAAJ,EAASH,KAAT,CADiC;AAAA,GAApB,CAAnB;AAGA,MAAMI,cAAc,GAAGH,UAAU,CAACI,KAAX,CACrB,UAAAC,SAAS;AAAA,WACPC,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,MAAvB,KAAkC,CAAlC,IAAuCH,SAAS,CAACI,WAAV,KAA0BH,MAD1D;AAAA,GADY,CAAvB;AAIA,SAAOH,cAAP;AACD,CAVM","sourcesContent":["import { ordinals } from \"../data\";\nimport { diff } from \"deep-object-diff\";\nexport const getIntervalSymbol = (interval, intervalType) => {\n  switch (intervalType) {\n    case \"inclusive\":\n      return ` //${interval}`;\n    case \"exclusive\":\n      return ` /${interval}`;\n    case \"none\":\n      return \"\";\n    default:\n      return `${interval}`;\n  }\n};\n\nexport const getOrdinalSymbol = sortOrder => {\n  return ordinals[sortOrder] + \".\";\n};\n\nexport const areTheseThingsEqual = things => {\n  const unorderedThings = things.map(thing => ({ ...thing, sortOrder: 0 }));\n  const thingDiffs = unorderedThings.map((thing, i, arr) =>\n    diff(arr[0], thing)\n  );\n  const areThingsEqual = thingDiffs.every(\n    thingDiff =>\n      Object.keys(thingDiff).length === 0 && thingDiff.constructor === Object\n  );\n  return areThingsEqual;\n};\n"]},"metadata":{},"sourceType":"module"}